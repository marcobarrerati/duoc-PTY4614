@startuml C4_Component
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Módulo de Vecinos - Diagrama de Componentes (Nivel 3)

Person(user, "Usuario", "Vecino, Dirigente o Administrador del sistema")

Container(web_browser, "Navegador Web", "Chrome/Firefox/Safari", "Navegador web del usuario")

Container_Boundary(react_app, "Aplicación Web React") {
    Component(auth_component, "Componente de Autenticación", "React + shadcn/ui", "Maneja login, registro y gestión de sesiones de usuario")
    Component(vecinos_component, "Componente de Vecinos", "React + shadcn/ui", "CRUD de vecinos con validaciones chilenas (RUN, teléfono)")
    Component(solicitudes_component, "Componente de Solicitudes", "React + shadcn/ui", "Gestión de solicitudes vecinales y seguimiento")
    Component(actividades_component, "Componente de Actividades", "React + shadcn/ui", "Organización de eventos y gestión de participación")
    Component(notifications_component, "Componente de Notificaciones", "React + shadcn/ui", "Centro de mensajes y comunicaciones multicanal")
    Component(dashboard_component, "Componente Dashboard", "React + shadcn/ui", "Panel principal con métricas y resumen")
}

Container_Boundary(supabase_backend, "Supabase Backend") {
    Component(auth_api, "API de Autenticación", "Supabase Auth", "Autenticación JWT, OAuth, gestión de usuarios")
    ComponentDb(vecinos_table, "Tabla Vecinos", "PostgreSQL", "datos_personales, datos_contacto, datos_vecinales")
    ComponentDb(solicitudes_table, "Tabla Solicitudes", "PostgreSQL", "Solicitudes con estados y seguimiento")
    ComponentDb(actividades_table, "Tabla Actividades", "PostgreSQL", "Eventos comunitarios y participación")
    Component(validation_functions, "Funciones de Validación", "PostgreSQL Functions", "Validación de RUN chileno, teléfonos, emails")
    Component(notification_functions, "Edge Functions", "Deno", "Lógica de envío de notificaciones multicanal")
    Component(realtime_api, "API Realtime", "Supabase Realtime", "Subscripciones y actualizaciones en vivo")
    Component(storage_api, "API Storage", "Supabase Storage", "Gestión de archivos y documentos")
}

System_Ext(sendgrid_api, "SendGrid API", "Envío de emails")
System_Ext(twilio_api, "Twilio API", "Envío de SMS")
System_Ext(googlemaps_api, "Google Maps API", "Geocodificación")

Rel(user, web_browser, "Utiliza")
Rel(web_browser, auth_component, "Autentica", "HTTPS")
Rel(web_browser, vecinos_component, "Gestiona vecinos", "HTTPS")
Rel(web_browser, solicitudes_component, "Crea solicitudes", "HTTPS")
Rel(web_browser, actividades_component, "Participa en eventos", "HTTPS")
Rel(web_browser, notifications_component, "Envía mensajes", "HTTPS")
Rel(web_browser, dashboard_component, "Visualiza métricas", "HTTPS")

Rel(auth_component, auth_api, "Autentica", "JWT")
Rel(vecinos_component, vecinos_table, "CRUD", "PostgREST")
Rel(solicitudes_component, solicitudes_table, "CRUD", "PostgREST")
Rel(actividades_component, actividades_table, "CRUD", "PostgREST")
Rel(notifications_component, notification_functions, "Trigger", "HTTPS")

Rel(vecinos_component, validation_functions, "Valida datos", "SQL")
Rel(vecinos_component, storage_api, "Sube documentos", "REST")
Rel(actividades_component, realtime_api, "Live updates", "WebSocket")

Rel(notification_functions, sendgrid_api, "Envía emails", "REST")
Rel(notification_functions, twilio_api, "Envía SMS", "REST")
Rel(vecinos_component, googlemaps_api, "Valida direcciones", "REST", $tags="async")

Rel(auth_api, vecinos_table, "RLS", "PostgreSQL")
Rel(auth_api, solicitudes_table, "RLS", "PostgreSQL")
Rel(auth_api, actividades_table, "RLS", "PostgreSQL")

SHOW_LEGEND()
@enduml