@startuml C4_Deployment
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

title Sistema Unidad Territorial - Diagrama de Despliegue (Nivel 4)

Deployment_Node(user_device, "Dispositivo del Usuario", "Windows/macOS/Linux/Mobile") {
    Deployment_Node(web_browser, "Navegador Web", "Chrome 120+, Firefox 115+, Safari 16+") {
        Container(spa_app, "Single Page Application", "React 18 + Vite 5", "Aplicación web responsiva")
    }
}

Deployment_Node(vercel_cloud, "Vercel Cloud Platform", "Global Edge Network") {
    Deployment_Node(edge_functions_vercel, "Vercel Edge Functions", "V8 Runtime") {
        Container(static_hosting, "Static Web Hosting", "CDN Global", "Distribución de assets estáticos")
        Container(serverless_functions, "Serverless Functions", "Node.js 18", "API endpoints y middleware")
    }
}

Deployment_Node(cloudflare, "Cloudflare CDN", "Global Content Delivery Network") {
    Container(cdn_cache, "CDN Cache", "Edge Locations", "Cache global de contenido estático")
}

Deployment_Node(supabase_cloud, "Supabase Cloud", "AWS Infrastructure") {
    Deployment_Node(database_cluster, "Database Cluster", "AWS RDS PostgreSQL 15") {
        ContainerDb(primary_db, "PostgreSQL Primary", "Database", "Base de datos principal con RLS habilitado")
        ContainerDb(replica_db, "PostgreSQL Replica", "Read Replica", "Réplica de lectura para consultas")
    }
    
    Deployment_Node(auth_service_node, "Auth Service", "Microservice Architecture") {
        Container(auth_service, "Supabase Auth", "GoTrue", "Servicio de autenticación JWT + OAuth")
    }
    
    Deployment_Node(realtime_service_node, "Realtime Service", "Phoenix Framework") {
        Container(realtime_service, "Supabase Realtime", "Elixir/Phoenix", "WebSocket para actualizaciones en tiempo real")
    }
    
    Deployment_Node(storage_service_node, "Storage Service", "S3-Compatible") {
        Container(storage_service, "Supabase Storage", "S3 API", "Almacenamiento de archivos con CDN")
    }
    
    Deployment_Node(edge_functions_node, "Edge Functions", "Deno Runtime Global") {
        Container(edge_functions, "Deno Functions", "TypeScript/JavaScript", "Funciones serverless distribuidas globalmente")
    }
}

Deployment_Node(external_services, "Servicios Externos", "Third-party APIs") {
    Deployment_Node(sendgrid_service, "SendGrid Platform", "Email Infrastructure") {
        System_Ext(sendgrid, "SendGrid API", "Email Delivery Service")
    }
    
    Deployment_Node(twilio_service, "Twilio Platform", "Communications API") {
        System_Ext(twilio, "Twilio API", "SMS Service")
    }
    
    Deployment_Node(google_cloud, "Google Cloud Platform", "Maps API") {
        System_Ext(google_maps, "Google Maps API", "Geocoding Service")
    }
}

Rel(spa_app, cdn_cache, "Solicita assets", "HTTPS")
Rel(cdn_cache, static_hosting, "Cache miss", "HTTPS")
Rel(spa_app, auth_service, "Autentica", "HTTPS/JWT")
Rel(spa_app, primary_db, "Consultas/Mutaciones", "PostgREST/HTTPS")
Rel(spa_app, realtime_service, "Subscripciones", "WebSocket/WSS")
Rel(spa_app, storage_service, "Upload/Download", "HTTPS")
Rel(spa_app, edge_functions, "Ejecuta funciones", "HTTPS")

Rel(primary_db, replica_db, "Replicación", "PostgreSQL Wire Protocol")
Rel(auth_service, primary_db, "Validación usuarios", "PostgreSQL")
Rel(realtime_service, primary_db, "Listen changes", "PostgreSQL LISTEN/NOTIFY")

Rel(edge_functions, sendgrid, "Envía emails", "HTTPS/REST")
Rel(edge_functions, twilio, "Envía SMS", "HTTPS/REST")
Rel(edge_functions, google_maps, "Geocoding", "HTTPS/REST")

SHOW_LEGEND()
@enduml